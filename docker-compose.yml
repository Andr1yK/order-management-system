version: '3.8'

services:
  app:
    build: .
    container_name: order-management-app
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_management
      - DB_SSL=false
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
    restart: unless-stopped
    command: npm run dev

  postgres:
    image: postgres:14-alpine
    container_name: order-management-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_management
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./migrations/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    restart: unless-stopped

  frontend:
    build:
      context: ./client
    container_name: order-management-frontend
    ports:
      - "3001:3000"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - app
    restart: unless-stopped
    stdin_open: true
    command: npm start

volumes:
  postgres_data:
