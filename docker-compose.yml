version: '3.8'

services:
  app:
    build: monolith
    container_name: app
    environment:
      - PORT=3000
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_management
      - DB_SSL=false
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
      - USER_SERVICE_URL=http://user-service:3030
      - ORDER_SERVICE_URL=http://order-service:3040
      - SHOULD_USE_ORDER_SERVICE_SCHEMA=true
    ports:
      - "3000:3000"
    volumes:
      - ./monolith:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
    restart: unless-stopped
    command: sh -c "npm run dev:with-db"

  user-service:
    build: ./microservices/user-service
    container_name: user-service
    environment:
      - PORT=3030
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_management
      - DB_SCHEMA=user_service_db
      - DB_SSL=false
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
    ports:
      - "3030:3030"
    volumes:
      - ./microservices/user-service:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npm run dev"

  order-service:
    build: ./microservices/order-service
    container_name: order-service
    environment:
      - PORT=3040
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order_management
      - DB_SCHEMA=order_service_db
      - DB_SSL=false
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
      - USER_SERVICE_URL=http://user-service:3030
    ports:
      - "3040:3040"
    volumes:
      - ./microservices/order-service:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npm run dev"

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=order_management
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./monolith/client
    container_name: frontend
    ports:
      - "3001:3000"
    volumes:
      - ./monolith/client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - app
    restart: unless-stopped
    stdin_open: true
    command: npm start

volumes:
  postgres_data:
